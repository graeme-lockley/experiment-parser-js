-- given expressions containing functional composition
funnyNot a b = a o b;
funnyPlus a b c x = (a o b o c) x;
-- ast
{
  "type": "MODULE",
  "sourceName": "stream",
  "imports": [],
  "declarations": [
    {
      "type": "DECLARATION",
      "name": "funnyNot",
      "expression": {
        "type": "LAMBDA",
        "variable": "a",
        "expression": {
          "type": "LAMBDA",
          "variable": "b",
          "expression": {
            "type": "COMPOSITION",
            "left": {
              "type": "IDENTIFIER",
              "name": "a"
            },
            "right": {
              "type": "IDENTIFIER",
              "name": "b"
            }
          }
        }
      },
      "assumptions": []
    },
    {
      "type": "DECLARATION",
      "name": "funnyPlus",
      "expression": {
        "type": "LAMBDA",
        "variable": "a",
        "expression": {
          "type": "LAMBDA",
          "variable": "b",
          "expression": {
            "type": "LAMBDA",
            "variable": "c",
            "expression": {
              "type": "LAMBDA",
              "variable": "x",
              "expression": {
                "type": "APPLY",
                "operation": {
                  "type": "COMPOSITION",
                  "left": {
                    "type": "COMPOSITION",
                    "left": {
                      "type": "IDENTIFIER",
                      "name": "a"
                    },
                    "right": {
                      "type": "IDENTIFIER",
                      "name": "b"
                    }
                  },
                  "right": {
                    "type": "IDENTIFIER",
                    "name": "c"
                  }
                },
                "operand": {
                  "type": "IDENTIFIER",
                  "name": "x"
                }
              }
            }
          }
        }
      },
      "assumptions": []
    }
  ],
  "expression": {
    "type": "CONSTANT_UNIT"
  }
}